CREATE TABLE ROLES (  
	role_id INT AUTO_INCREMENT PRIMARY KEY,
	role_name VARCHAR(50) NOT NULL	
);

CREATE TABLE PATHS (  
	path_id INT AUTO_INCREMENT PRIMARY KEY,
	path VARCHAR(100) NOT NULL	
);

CREATE TABLE USERS (  
	user_id INT AUTO_INCREMENT  PRIMARY KEY,  
	username VARCHAR(50) NOT NULL,  
	password VARCHAR(50) NOT NULL,
	role_id INT NOT NULL,
	FOREIGN KEY (role_id) REFERENCES ROLES(role_id)
);

CREATE TABLE PATH_ROLES (  
	path_id INT NOT NULL,	
	role_id INT NOT NULL,
	FOREIGN KEY (path_id) REFERENCES PATHS(path_id),
	FOREIGN KEY (role_id) REFERENCES ROLES(role_id)
);

CREATE TABLE DIRECTORS (  
	director_id INT AUTO_INCREMENT PRIMARY KEY,
	director VARCHAR(100) NOT NULL	
);

CREATE TABLE MOVIES (  
	movie_id INT AUTO_INCREMENT  PRIMARY KEY,
	title VARCHAR(100) NOT NULL,
	start_year VARCHAR(4) NOT NULL,
	director_id INT NOT NULL,
	poster_url VARCHAR(255) NOT NULL,
	imdb_rating double NOT NULL,
	FOREIGN KEY (director_id) REFERENCES DIRECTORS(director_id)
);

CREATE TABLE GENRES (  
	genre_id INT AUTO_INCREMENT PRIMARY KEY,
	genre VARCHAR(50) NOT NULL
);

CREATE TABLE GENRE_MOVIES (  
	movie_id INT NOT NULL,	
	genre_id INT NOT NULL,
	FOREIGN KEY (movie_id) REFERENCES MOVIES(movie_id),
	FOREIGN KEY (genre_id) REFERENCES GENRES(genre_id)
);

CREATE TABLE RANKING_POINTS (
	ranking_points_id INT AUTO_INCREMENT  PRIMARY KEY,
	user_id INT NOT NULL,
	game_type VARCHAR(100) NOT NULL,
	points NUMERIC(2, 0) NOT NULL,
	FOREIGN KEY (user_id) REFERENCES USERS(user_id)	
);

CREATE VIEW PUBLIC.RANKING_CARD_GAME AS 
SELECT ROW_NUMBER() OVER () AS POSITION, RP.USER_ID, U.USERNAME, SUM(RP.POINTS) AS POINTS FROM RANKING_POINTS RP
JOIN USERS U 
ON RP.USER_ID = U.USER_ID
WHERE RP.GAME_TYPE = 'CARD_GAME'
GROUP BY RP.USER_ID 
ORDER BY RP.POINTS
DESC;